{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../mangas.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@auth0/auth0-angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction ListMangaComponent_div_1_tr_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\")(10, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ListMangaComponent_div_1_tr_18_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const manga_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.delManga(manga_r2));\n    });\n    i0.ɵɵtext(11, \"Delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"a\", 9);\n    i0.ɵɵtext(13, \"Edit\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const manga_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(manga_r2.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(manga_r2.author);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(manga_r2.year_written);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(manga_r2.NumberOfVolumes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate1(\"href\", \"edit-manga/\", manga_r2._id, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ListMangaComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"form\", 2)(2, \"div\", 3);\n    i0.ɵɵelement(3, \"input\", 4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 5)(5, \"table\", 6)(6, \"thead\")(7, \"th\");\n    i0.ɵɵtext(8, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Author\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Year Written\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Number Of Volumes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Edit/Delete\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"tbody\");\n    i0.ɵɵtemplate(18, ListMangaComponent_div_1_tr_18_Template, 14, 5, \"tr\", 7);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.searchForm);\n    i0.ɵɵadvance(17);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.filteredMangas);\n  }\n}\n\nexport class ListMangaComponent {\n  constructor(mangaservice, router, auth) {\n    this.mangaservice = mangaservice;\n    this.router = router;\n    this.auth = auth;\n    this.searchForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  ngOnInit() {\n    this.auth.user$.subscribe(user => {\n      this.user = user;\n\n      if (this.user && this.user.email === 's00212387@atu.ie') {\n        this.loadManga();\n      } else {\n        this.filteredMangas = [];\n      }\n    });\n    this.searchForm.valueChanges.pipe(debounceTime(300), distinctUntilChanged()).subscribe(value => {\n      this.filteredMangas = this.mangas.filter(manga => manga.title.toLowerCase().includes(value.search.toLowerCase()) || manga.year_written.toString().includes(value.search) || manga.NumberOfVolumes.toString().includes(value.search) || manga.author.toLowerCase().includes(value.search.toLowerCase()));\n    });\n  }\n\n  loadManga() {\n    this.mangaservice.listManga().subscribe(data => {\n      this.mangas = data;\n      this.filteredMangas = data;\n    });\n  }\n\n  delManga(datas) {\n    if (this.user && this.user.email === 's00212387@atu.ie') {\n      this.mangaservice.deleteManga(datas._id).subscribe(data => {\n        console.log(data);\n        this.mangas = this.mangas.filter(u => u !== datas);\n        this.filteredMangas = this.filteredMangas.filter(u => u !== datas);\n      });\n    } else {\n      console.log('User is not authorized to delete manga.');\n    }\n  }\n\n  resetManga() {\n    this.loadManga();\n  }\n\n}\n\nListMangaComponent.ɵfac = function ListMangaComponent_Factory(t) {\n  return new (t || ListMangaComponent)(i0.ɵɵdirectiveInject(i1.MangasService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n};\n\nListMangaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ListMangaComponent,\n  selectors: [[\"app-list-manga\"]],\n  decls: 3,\n  vars: 3,\n  consts: [[1, \"container\"], [4, \"ngIf\"], [1, \"mb-3\", 3, \"formGroup\"], [1, \"input-group\"], [\"type\", \"text\", \"formControlName\", \"search\", \"placeholder\", \"Search manga...\", 1, \"form-control\"], [1, \"row\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-danger\", 3, \"click\"], [1, \"btn\", \"btn-success\", 3, \"href\"]],\n  template: function ListMangaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ListMangaComponent_div_1_Template, 19, 2, \"div\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 1, ctx.auth.isAuthenticated$));\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i4.AsyncPipe],\n  styles: [\"button[_ngcontent-%COMP%] {\\r\\n    margin-right: 10px;\\r\\n  }\\r\\n\\r\\nform[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n\\r\\ninput[type=\\\"text\\\"][_ngcontent-%COMP%] {\\r\\n    margin-right: 10px;\\r\\n    margin-top: 25px;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpc3QtbWFuZ2EuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtFQUNwQjs7QUFFRjtJQUNJLG1CQUFtQjtFQUNyQjs7QUFFRjtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEIiLCJmaWxlIjoibGlzdC1tYW5nYS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYnV0dG9uIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICB9XHJcblxyXG5mb3JtIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgfVxyXG4gIFxyXG5pbnB1dFt0eXBlPVwidGV4dFwiXSB7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gIH1cclxuXHJcbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","debounceTime","distinctUntilChanged","i0","ListMangaComponent","constructor","mangaservice","router","auth","searchForm","search","ngOnInit","user$","subscribe","user","email","loadManga","filteredMangas","valueChanges","pipe","value","mangas","filter","manga","title","toLowerCase","includes","year_written","toString","NumberOfVolumes","author","listManga","data","delManga","datas","deleteManga","_id","console","log","u","resetManga","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Dawid\\Desktop\\OSD\\web\\angular2022-S00212387-main\\mangaapp\\src\\app\\list-manga\\list-manga.component.ts","C:\\Users\\Dawid\\Desktop\\OSD\\web\\angular2022-S00212387-main\\mangaapp\\src\\app\\list-manga\\list-manga.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MangasService } from '../mangas.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { AuthService } from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-list-manga',\n  templateUrl: './list-manga.component.html',\n  styleUrls: ['./list-manga.component.css']\n})\nexport class ListMangaComponent implements OnInit {\n  mangas: any;\n  searchForm: FormGroup;\n  filteredMangas: any;\n  user: any;\n\n  constructor(\n    private mangaservice: MangasService,\n    private router: Router,\n    public auth: AuthService\n  ) {\n    this.searchForm = new FormGroup({\n      search: new FormControl('')\n    });\n  }\n\n  ngOnInit(): void {\n    this.auth.user$.subscribe((user) => {\n      this.user = user;\n      if (this.user && this.user.email === 's00212387@atu.ie') {\n        this.loadManga();\n      } else {\n        this.filteredMangas = [];\n      }\n    });\n\n    this.searchForm.valueChanges\n      .pipe(debounceTime(300), distinctUntilChanged())\n      .subscribe((value) => {\n        this.filteredMangas = this.mangas.filter((manga: any) =>\n          manga.title.toLowerCase().includes(value.search.toLowerCase()) ||\n          manga.year_written.toString().includes(value.search) ||\n          manga.NumberOfVolumes.toString().includes(value.search) ||\n          manga.author.toLowerCase().includes(value.search.toLowerCase())\n        );\n      });\n  }\n\n  loadManga() {\n    this.mangaservice.listManga().subscribe((data: any) => {\n      this.mangas = data;\n      this.filteredMangas = data;\n    });\n  }\n\n  delManga(datas: any) {\n    if (this.user && this.user.email === 's00212387@atu.ie') {\n      this.mangaservice.deleteManga(datas._id).subscribe((data) => {\n        console.log(data);\n        this.mangas = this.mangas.filter((u: any) => u !== datas);\n        this.filteredMangas = this.filteredMangas.filter((u: any) => u !== datas);\n      });\n    } else {\n      console.log('User is not authorized to delete manga.');\n    }\n  }\n\n  resetManga(): void {\n    this.loadManga();\n  }\n}\n","<div class=\"container\">\n    <div *ngIf=\"(auth.isAuthenticated$ | async)\">\n      <form [formGroup]=\"searchForm\" class=\"mb-3\">\n        <div class=\"input-group\">\n          <input type=\"text\" formControlName=\"search\" class=\"form-control\" placeholder=\"Search manga...\">\n        </div>\n      </form>\n    \n      <div class=\"row\">\n        <table class=\"table\">\n          <thead>\n            <th>Title</th>\n            <th>Author</th>\n            <th>Year Written</th>\n            <th>Number Of Volumes</th>\n            <th>Edit/Delete</th>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let manga of filteredMangas\">\n              <td>{{manga.title}}</td>\n              <td>{{manga.author}}</td>\n              <td>{{manga.year_written}}</td>\n              <td>{{manga.NumberOfVolumes}}</td>\n              <td>\n                <button (click)=\"delManga(manga)\" class=\"btn btn-danger\">Delete</button>\n                <a href=\"edit-manga/{{manga._id}}\" class=\"btn btn-success\">Edit</a>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n  "]},"metadata":{},"sourceType":"module"}